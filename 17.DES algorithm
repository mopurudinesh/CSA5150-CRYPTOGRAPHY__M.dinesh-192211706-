17.#include <stdio.h>
#include <string.h>

#define KEY_SIZE 64
#define BLOCK_SIZE 64

void permute(char *k, int arr[], int n) {
    char permutation[KEY_SIZE];
    for (int i = 0; i < n; i++) {
        permutation[i] = k[arr[i] - 1];
    }
    strcpy(k, permutation);
}

void shift_left(char *k, int nth_shifts) {
    char s[KEY_SIZE];
    for (int i = 0; i < nth_shifts; i++) {
        for (int j = 1; j < strlen(k); j++) {
            s[j - 1] = k[j];
        }
        s[strlen(k) - 1] = k[0];
        strcpy(k, s);
    }
}

void key_generation(char *key, int key_size) {
    int key_comp[] = {14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 49, 36, 58, 50, 42, 34, 59, 53, 61, 35, 43, 44, 46, 54, 57, 62, 60, 39, 38};
    char k[KEY_SIZE];
    for (int i = 0; i < key_size; i++) {
        k[i] = key[key_comp[i] - 1];
    }
    shift_left(k, 1);
    for (int i = 0; i < 16; i++) {
        shift_left(k, 2);
        permute(k, key_comp, KEY_SIZE);
        printf("K%d: %s\n", 16 - i, k);
    }
}

int main() {
    char key[KEY_SIZE] = "your_64_bit_key_here";
    key_generation(key, KEY_SIZE);
    return 0;
}
